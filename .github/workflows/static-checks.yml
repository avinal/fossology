# Copyright 2021 Avinal Kumar <avinal.xlvii@gmail.com>
# SPDX-License-Identifier: GPL-2.0 AND LGPL-2.

name: Static checks and analysis

on:
  push:
    branches: [ avinal/feat/testing ]
  pull_request:
    branches: [ master ]

jobs:
  syntax-check:
    runs-on: ubuntu-20.04
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y php7.4-cli
          export PATH="/usr/lib/ccache/:$PATH"
          export COMPOSER_HOME="$HOME/.composer/"
          sudo update-alternatives --set php /usr/bin/php7.4
      - uses: actions/checkout@v2
        with:
          fetch-depth: 50
      - name: Syntax Check
        run: |
          bash src/testing/syntax/syntaxtest.sh
          composer validate --no-check-all --working-dir=src --strict

  code-analysis:
    runs-on: ubuntu-20.04
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cppcheck
          export PATH="/usr/lib/ccache/:$PATH"

      - uses: actions/checkout@v2
        with:
          fetch-depth: 50
      - name: Static Code Analysis
        run: cppcheck -q -isrc/nomos/agent_tests/testdata/NomosTestfiles/ -isrc/testing/dataFiles/ src/

  codesniffer:
    runs-on: ubuntu-20.04
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y php-cli
          export PATH="/usr/lib/ccache/:$PATH"
          export COMPOSER_HOME="$HOME/.composer/"
      - uses: actions/checkout@v2
        with:
          fetch-depth: 50
      - name: PHP Codesniffer
        run: |
          composer install --prefer-dist --working-dir=src
          src/vendor/bin/phpcs --standard=src/fossy-ruleset.xml -p
  
  copy-paste:
    runs-on: ubuntu-20.04
    continue-on-error: true
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y php-cli
          export PATH="/usr/lib/ccache/:$PATH"
      - uses: actions/checkout@v2
        with:
          fetch-depth: 50
      - name: Copy/Paste detector
        run: |
          composer install --prefer-dist --working-dir=src
          sudo phpdismod -v ALL -s ALL xdebug
          src/vendor/bin/phpcpd src/cli/ src/copyright/ src/decider*/ src/lib/ src/monk/ src/nomos/ src/readmeoss/ src/spdx2/ src/www/ || echo -e "\033[0;31mDuplication detected: Task Failed"

  openapi-lint:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: swagger-cli
      uses: vaibhav-jain/spectral-action/@v2.6
      with:
        file_path: src/www/ui/api/documentation/openapi.yaml

  build_test:
    runs-on: ubuntu-20.04
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: fossy
          POSTGRES_USER: fossy
          POSTGRES_DB: fossology
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 50
    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y libboost-system-dev libboost-filesystem-dev libcppunit-dev libcunit1-dev libdbd-sqlite3-perl libjsoncpp-dev libjson-c-dev liblocal-lib-perl libspreadsheet-writeexcel-perl libtext-template-perl libgcrypt20-dev
        sudo ./utils/fo-installdeps --everything
        export PATH="/usr/lib/ccache/:$PATH"
        export COMPOSER_HOME="$HOME/.composer/"

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Debug -GNinja ..
        
    - name: Build Project
      run: cmake --build build --config Debug --parallel 10

    - name: Prepare And Tests
      run: |
        sudo ./utils/prepare-test
        cd build
        ctest --output-on-failure --parallel 10
      env:
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        
